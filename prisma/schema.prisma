generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "cockroachdb"
  url       = env("PRISMA_URL")
  directUrl = env("PRISMA_DIRECT")
}

model Player {
  id         BigInt      @id @unique @default(autoincrement())
  teamId     BigInt
  name       String
  lastname   String
  number     Int
  height     Int
  position   Position
  age        DateTime
  team       Team        @relation(fields: [teamId], references: [id])
  statistics Statistics[]
  rosters    Roster[]

  @@index([id, lastname, teamId])
  @@map("players")
}

enum Position {
  PG
  SG
  SF
  PF
  C
}

model Staff {
  id       BigInt @id @unique @default(autoincrement())
  teamId   BigInt
  name     String
  lastname String
  role     Role
  team     Team @relation(fields: [teamId], references: [id])

  @@index([id, lastname, role])
  @@map("staff")
}

enum Role {
  COACH
  TRAINER
}

model Statistics {
  id            BigInt @id @unique @default(autoincrement())
  playerId      BigInt
  matchId       BigInt
  minutes       Int    @default(0)
  points        Int?
  insideFga     Int?
  outsideFga    Int?
  freethrowsFga Int?
  insideFgm     Int?
  outsideFgm    Int?
  freethrowsFgm Int?
  assists       Int?
  reboundsSum   Int?
  reboundsOff   Int?
  reboundsDef   Int?
  blocks        Int?
  steals        Int?
  turnovers     Int?
  fouls         Int?
  player        Player @relation(fields: [playerId], references: [id])
  match         Match  @relation(fields: [matchId], references: [id])

  @@index([id, playerId, matchId])
  @@map("statistics")
}

model Team {
  id              BigInt      @id @unique @default(autoincrement())
  cityId          BigInt
  leagueId        BigInt
  name            String   @unique
  won             Int      @default(0)
  lost            Int      @default(0)
  city            City     @relation(fields: [cityId], references: [id])
  league          League   @relation(fields: [leagueId], references: [id])
  players         Player[]
  staff           Staff[]
  rosters         Roster[]
  hostMatches     Match[]  @relation("hostTeam")
  opponentMatches Match[]  @relation("opponentTeam")

  @@index([id, name])
  @@map("teams")
}

model Match {
  id         BigInt       @id @unique @default(autoincrement())
  leagueId   BigInt
  hostId     BigInt
  opponentId BigInt
  league     League       @relation(fields: [leagueId], references: [id])
  host       Team         @relation("hostTeam", fields: [hostId], references: [id])
  opponent   Team         @relation("opponentTeam", fields: [opponentId], references: [id])
  schedule   Schedule?
  score      Score?
  rosters    Roster[]
  statistics Statistics[]
  backlogs   Backlog[]

  @@index([id, hostId, opponentId])
  @@map("matches")
}

model Roster {
  id      BigInt   @id @default(autoincrement())
  teamId  BigInt
  matchId BigInt
  team    Team     @relation(fields: [teamId], references: [id])
  match   Match    @relation(fields: [matchId], references: [id])
  players Player[]

  @@index([id, matchId])
  @@map("rosters")
}

model Score {
  match    Match  @relation(fields: [matchId], references: [id])
  matchId  BigInt @unique
  host     Int[]
  opponent Int[]

  @@index([matchId])
  @@map("score")
}

model Backlog {
  id       BigInt   @id @unique @default(autoincrement())
  matchId  BigInt
  data     String
  datetime DateTime
  match    Match    @relation(fields: [matchId], references: [id])

  @@map("backlog")
}

model Schedule {
  match    Match    @relation(fields: [matchId], references: [id])
  matchId  BigInt   @unique
  arenaId  BigInt
  datetime DateTime
  arena    Arena    @relation(fields: [arenaId], references: [id])

  @@index([matchId, arenaId])
  @@map("schedules")
}

model City {
  id        BigInt   @id @unique @default(autoincrement())
  name      String
  state     String
  teams     Team[]
  arenas    Arena[]
  leagues   League[]

  @@index([id, name])
  @@map("cities")
}

model Arena {
  id        BigInt @id @unique @default(autoincrement())
  cityId    BigInt
  name      String
  location  String
  city      City   @relation(fields: [cityId], references: [id])
  schedules Schedule[]
  leagues   League[]

  @@index([id, name])
  @@map("arenas")
}

model League {
  id      BigInt  @id @unique @default(autoincrement())
  cityId  BigInt
  arenaId BigInt
  name    String
  city    City    @relation(fields: [cityId], references: [id])
  arena   Arena   @relation(fields: [arenaId], references: [id])
  teams   Team[]
  matches Match[]

  @@index([id, name])
  @@map("leagues")
}