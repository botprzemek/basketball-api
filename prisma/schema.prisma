generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("PRISMA_URL")
  directUrl = env("PRISMA_DIRECT")
}

model Player {
  id         Int         @id @unique @default(autoincrement())
  name       String
  lastname   String
  number     Int
  height     Int
  position   Position
  age        DateTime
  team       Team        @relation(fields: [teamId], references: [id])
  teamId     Int
  statistics Statistics?
  rosters    Roster[]

  @@index([id, lastname, teamId])
  @@map("players")
}

model Staff {
  id       Int         @id @unique @default(autoincrement())
  name     String
  lastname String
  role     Role
}

enum Position {
  PG
  SG
  SF
  PF
  C
}

enum Role {
  COACH
  TRAINER
}

model Statistics {
  id            Int    @id @unique @default(autoincrement())
  playerId      Int    @unique
  matchId       Int
  minutes       Int    @default(0)
  points        Int?
  insideFga     Int?
  outsideFga    Int?
  freethrowsFga Int?
  insideFgm     Int?
  outsideFgm    Int?
  freethrowsFgm Int?
  assists       Int?
  reboundsSum   Int?
  reboundsOff   Int?
  reboundsDef   Int?
  blocks        Int?
  steals        Int?
  turnovers     Int?
  fouls         Int?
  match         Match  @relation(fields: [matchId], references: [id])
  player        Player @relation(fields: [playerId], references: [id])

  @@index([id, playerId, matchId])
  @@map("statistics")
}

model Team {
  id              Int      @id @unique @default(autoincrement())
  name            String   @unique
  won             Int      @default(0)
  lost            Int      @default(0)
  hostMatches     Match[]  @relation("hostTeam")
  opponentMatches Match[]  @relation("opponentTeam")
  players         Player[]
  city            City     @relation(fields: [cityId], references: [id])
  cityId          Int
  league          League   @relation(fields: [leagueId], references: [id])
  leagueId        Int
  rosters         Roster[]

  @@index([id, name])
  @@map("teams")
}

model Match {
  id         Int          @id @unique @default(autoincrement())
  league     League       @relation(fields: [leagueId], references: [id])
  leagueId   Int
  host       Team         @relation("hostTeam", fields: [hostId], references: [id])
  hostId     Int
  opponent   Team         @relation("opponentTeam", fields: [opponentId], references: [id])
  opponentId Int
  schedule   Schedule?
  score      Score?
  rosters    Roster[]
  statistics Statistics[]
  backlogs   Backlog[]

  @@index([id, hostId, opponentId])
  @@map("matches")
}

model Roster {
  id      Int      @id @default(autoincrement())
  players Player[]
  team    Team     @relation(fields: [teamId], references: [id])
  teamId  Int
  match   Match    @relation(fields: [matchId], references: [id])
  matchId Int

  @@index([id, matchId])
  @@map("rosters")
}

model Score {
  match    Match @relation(fields: [matchId], references: [id])
  matchId  Int   @unique
  host     Int[]
  opponent Int[]

  @@index([matchId])
  @@map("score")
}

model Backlog {
  id       Int      @id @unique @default(autoincrement())
  match    Match    @relation(fields: [matchId], references: [id])
  matchId  Int
  data     String
  datetime DateTime

  @@map("backlog")
}

model Schedule {
  match    Match    @relation(fields: [matchId], references: [id])
  matchId  Int      @unique
  datetime DateTime
  arena    Arena    @relation(fields: [arenaId], references: [id])
  arenaId  Int

  @@index([matchId, arenaId])
  @@map("schedules")
}

model City {
  id        Int       @id @unique @default(autoincrement())
  name      String
  state     String
  leagues   League[]
  teams     Team[]
  arenas    Arena[]

  @@index([id, name])
  @@map("cities")
}

model Arena {
  id        Int    @id @unique @default(autoincrement())
  name      String
  location  String
  city      City   @relation(fields: [cityId], references: [id])
  cityId    Int
  schedules Schedule[]
  leagues   League[]

  @@index([id, name])
  @@map("arenas")
}

model League {
  id      Int    @id @unique @default(autoincrement())
  name    String
  city    City   @relation(fields: [cityId], references: [id])
  cityId  Int
  teams   Team[]
  matches Match[]
  arena   Arena  @relation(fields: [arenaId], references: [id])
  arenaId Int

  @@index([id, name])
  @@map("leagues")
}